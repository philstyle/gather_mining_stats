#!/bin/bash
OUTFILE=/tmp/ETH_CLASSIC_STATS

timeout 8 curl --ssl --silent https://etc.ethermine.org/api/miner_new/6afb3f2961fcfba851a7896d8f50903f91c05455 > ${OUTFILE}

NOW=`date +%s`

if [ `du -b ${OUTFILE} | awk '{print $1}'` -eq "0" ]; then
  echo "NO STATS"
  exit 0
fi

cat ${OUTFILE} | jq . > /dev/null 2>&1
STATS=$?
if [ ${STATS} -ne "0" ]; then
 echo "NO STATS"
 exit 0
fi

printf "%s\t\t%s\t%s\t%s" "WORKER" "HASHRATE" "REPORTED" "SHARES LAST HOUR"
echo ""
printf "%s\t" "SUM TOTAL"
cat ${OUTFILE} | jq ".hashRate,.reportedHashRate" | awk 'NR > 1 { printf("\t") } {printf "%s",$0}' | tr -d '"'
printf "\t%s\t%s" "VALID" "INVALID"

echo ""
for WORKER in `cat ${OUTFILE} | jq '.workers | keys[]'`
do
 #make sure it is worth reporting
 DAT=`cat ${OUTFILE} | jq ".workers.${WORKER}.workerLastSubmitTime" | tr -d '"'`
 if [ $((NOW - DAT)) -gt "1800" ]; then
  continue
 fi
 if [ ${#WORKER} -lt 8 ]; then
  printf "%s\t\t" ${WORKER} | tr -d '"'
 else
  printf "%s\t" ${WORKER} | tr -d '"'
 fi
 cat ${OUTFILE} | jq ".workers.${WORKER}.hashrate, .workers.${WORKER}.reportedHashRate, .workers.${WORKER}.validShares, .workers.${WORKER}.invalidShares" | awk 'NR > 1 { printf("\t") } {printf "%s",$0}' | tr -d '"'
 echo ""
done
echo ""
echo "ETH PER MIN " `cat ${OUTFILE} | jq ".ethPerMin" | sed -e 's/[eE]+*/\*10\^/' | bc -l`
echo "\$   PER MIN " `cat ${OUTFILE} | jq ".usdPerMin" |  sed -e 's/[eE]+*/\*10\^/' | bc -l`

BITS=`cat ${OUTFILE} | jq ".unpaid"`
LITTLEBITS=`echo "$BITS / 1000000000000000000" | bc -l` #septillions?
echo " UNPAID ETH  ${LITTLEBITS}"
echo ""
