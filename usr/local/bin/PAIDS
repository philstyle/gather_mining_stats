#!/bin/bash

#DIGIBYTE_GROESTL_STATS
#DIGIBYTE_SKEIN_STATS
DIGPAID=`cat /tmp/DIGIBYTE_* | jq ".payout_history" | tr -d '"' | awk 'NR > 1 { printf("+") } {printf "%s",$0}'`
DIGPAID=`echo "scale=1; ( ${DIGPAID} ) / 1" | bc -l`
DIGUNPAID=`cat /tmp/DIGIBYTE_* | jq ".confirmed_rewards" | tr -d '"' | awk 'NR > 1 { printf("+") } {printf "%s",$0}'`
DIGUNPAID=`echo "scale=2; ( ${DIGUNPAID} ) / 1" | bc -l`


#ETHEREUM_STATS
HUGE=1000000000000000000
ETHPAID=`cat /tmp/ETHEREUM_STATS | jq ".payouts[].amount" | awk 'NR > 1 { printf("+") } {printf "%s",$0}'`
ETHPAID=`echo "scale=4;( ${ETHPAID} ) / ${HUGE}" | bc -l`
ETHUNPAID=`cat /tmp/ETHEREUM_STATS | jq ".unpaid"`
ETHUNPAID=`echo "scale=5; ${ETHUNPAID} / ${HUGE}" | bc -l`


LARGER=100000000
ZECPAID=`cat /tmp/ZCASH_STATS | jq ".payouts[].amount" | awk 'NR > 1 { printf("+") } {printf "%s",$0}'`
ZECPAID=`echo "scale=4;( ${ZECPAID} ) / ${LARGER}" | bc -l`
ZECUNPAID=`cat /tmp/ZCASH_STATS | jq ".unpaid"`
ZECUNPAID=`echo "scale=5; ${ZECUNPAID} / ${LARGER}" | bc -l`

#ETHEREUM_NANOPOOL_STATS
#ETHNANOPAID="0.0"
#ETHNANOUNPAID=`cat /tmp/ETHEREUM_NANOPOOL_STATS | jq ".data.balance" | tr -d '"'`
#ETHNANOUNPAID=`echo "scale=5; ${ETHNANOUNPAID} / 1" | bc -l` 

#ETH_CLASSIC_STATS

#EXP_STATS
EXP_WEB=/tmp/EXP_WEB
timeout 8 curl --ssl --silent "https://dwarfpool.com/exp/address?wallet=0x254856971d2cf91bd7835660f2a2b7deafb037fe" > ${EXP_WEB}
EXPUNPAID=`cat ${EXP_WEB} | html2text -nobs -width 200 | egrep "EXP Current balance|EXP Confirmed but still not|EXP Unconfirmed" | awk '{print $2}' | awk 'NR > 1 { printf("+") } {printf "%s",$0}'`
EXPUNPAID=`echo "scale=4;( ${EXPUNPAID}) / 1" | bc -l`
EXPPAID=`cat ${EXP_WEB} | html2text -nobs -width 200 | grep "EXP Already paid" | awk '{print $2}'`
EXPPAID=`echo "scale=3; ${EXPPAID} / 1" | bc -l`

#MUSICOIN_STATS
MUSCALE=1000000000
MUSPAID=`cat /tmp/MUSICOIN_STATS | jq ".stats.paid"`
MUSPAID=`echo "scale=1; ${MUSPAID} / ${MUSCALE}" | bc -l`
MUSUNPAID=`cat /tmp/MUSICOIN_STATS | jq ".stats.balance, .stats.immature" | awk 'NR > 1 { printf("+") } {printf "%s",$0}'`
MUSUNPAID=`echo "scale=2;( ${MUSUNPAID} ) / ${MUSCALE}" | bc -l`

#UBIQ_STATS
UBIQSCALE=1000000000
UBIQPAID=`cat /tmp/UBIQ_STATS | jq ".stats.paid"`
UBIQPAID=`echo "scale=2; ${UBIQPAID} / ${UBIQSCALE}" | bc -l`
UBIQUNPAID=`cat /tmp/UBIQ_STATS | jq ".stats.balance, .stats.immature" | awk 'NR > 1 { printf("+") } {printf "%s",$0}'`
UBIQUNPAID=`echo "scale=4;( ${UBIQUNPAID} ) / ${UBIQSCALE}" | bc -l`


if [ ! -e /tmp/ethereumticker ]; then
 #need to get the values
 /usr/local/bin/COINMARKETCAP_TICKER 1 >> /dev/null 2>&1
else
 LAST=`stat -t /tmp/ethereumticker | awk '{print $13}'`
 NOW=`date +%s`
 SINCE=`echo "${NOW} - ${LAST}" | bc -l`
 if [ ${SINCE} -gt 3600 ]; then
  /usr/local/bin/COINMARKETCAP_TICKER 1 >> /dev/null 2>&1
 fi
fi


#ethereumticker
ETHUSD=`cat /tmp/ethereumticker | jq ".[0].price_usd" | tr -d '"'`
ETHUNUSD=`echo "scale=2; ( ${ETHUNPAID} * ${ETHUSD} ) / 1" | bc -l`
ETHPAIDUSD=`echo "scale=2; ( ${ETHPAID} * ${ETHUSD} ) / 1" | bc -l`

#zcashticker
ZECUSD=`cat /tmp/zcashticker | jq ".[0].price_usd" | tr -d '"'`
ZECUNUSD=`echo "scale=2; ( ${ZECUNPAID} * ${ZECUSD} ) / 1" | bc -l`
ZECPAIDUSD=`echo "scale=2; ( ${ZECPAID} * ${ZECUSD} ) / 1" | bc -l`

#ethereum from nanopool
#ETHNANOUNUSD=`echo "scale=2; ( ${ETHNANOUNPAID} * ${ETHUSD} ) / 1" | bc -l`
#ETHNANOPAIDUSD=`echo "scale=2; ( ${ETHNANOPAID} * ${ETHUSD} ) / 1" | bc -l`

#ethereum-classicticker
ETCUSD=`cat /tmp/ethereum-classicticker | jq ".[0].price_usd" | tr -d '"'`

#expanseticker
EXPUSD=`cat /tmp/expanseticker | jq ".[0].price_usd" | tr -d '"'`
EXPUNUSD=`echo "scale=2; ( ${EXPUNPAID} * ${EXPUSD} ) / 1" | bc -l`
EXPPAIDUSD=`echo "scale=2; ( ${EXPPAID} * ${EXPUSD} ) / 1" | bc -l`


#ubiqticker
UBIUSD=`cat /tmp/ubiqticker | jq ".[0].price_usd" | tr -d '"'`
UBIQUNUSD=`echo "scale=2; ( ${UBIQUNPAID} * ${UBIUSD} ) / 1" | bc -l`
UBIQPAIDUSD=`echo "scale=2; ( ${UBIQPAID} * ${UBIUSD} ) / 1" | bc -l`

#musicointicker
MUSUSD=`cat /tmp/musicointicker | jq ".[0].price_usd" | tr -d '"'`
MUSUNUSD=`echo "scale=2; ( ${MUSUNPAID} * ${MUSUSD} ) / 1" | bc -l`
MUSPAIDUSD=`echo "scale=2; ( ${MUSPAID} * ${MUSUSD} ) / 1" | bc -l`

#digibyteticker
DIGUSD=`cat /tmp/digibyteticker | jq ".[0].price_usd" | tr -d '"'`
DIGUNUSD=`echo "scale=2; ( ${DIGUNPAID} * ${DIGUSD} ) / 1" | bc -l`
DIGPAIDUSD=`echo "scale=2; ( ${DIGPAID} * ${DIGUSD} ) / 1" | bc -l`

printf "%s\t\t%s\t%s\t%s\t%s\t%s" "COIN" "UNPAID" "PAID" "~UN$" "~$" "~\$/coin"
echo ""
echo "---------------------------------------------------------"
printf "%s\t%s\t%s\t%s\t%s\t%s" "DIGIBYTE" $DIGUNPAID $DIGPAID $DIGUNUSD $DIGPAIDUSD $DIGUSD
echo ""
printf "%s\t%s\t%s\t%s\t%s\t%s" "ETHEREUM" $ETHUNPAID $ETHPAID $ETHUNUSD $ETHPAIDUSD $ETHUSD
echo ""
printf "%s\t\t%s\t%s\t%s\t%s\t%s" "EXPANSE" $EXPUNPAID $EXPPAID $EXPUNUSD $EXPPAIDUSD $EXPUSD
echo ""
printf "%s\t%s\t%s\t%s\t%s\t%s" "MUSICOIN" $MUSUNPAID $MUSPAID $MUSUNUSD $MUSPAIDUSD $MUSUSD
echo ""
printf "%s\t\t%s\t%s\t%s\t%s\t%s" "UBIQ" $UBIQUNPAID $UBIQPAID $UBIQUNUSD $UBIQPAIDUSD $UBIUSD
echo ""
printf "%s\t\t%s\t%s\t%s\t%s\t%s" "UBIQ" $ZECUNPAID $ZECPAID $ZECUNUSD $ZECPAIDUSD $ZECUSD
echo ""
echo "---------------------------------------------------------"

UNPTOTUSD=`echo "${DIGUNUSD} + ${ETHUNUSD} + ${EXPUNUSD} + ${MUSUNUSD} + ${UBIQUNUSD} + ${ZECUNUSD}" | bc -l`
PAIDTOTUSD=`echo "${DIGPAIDUSD} + ${ETHPAIDUSD} + ${EXPPAIDUSD} + ${MUSPAIDUSD} + ${UBIQPAIDUSD} + ${ZECPAIDUSD}" | bc -l`
printf "\t\t\t%s\t%s\t%s" "~TOT" "${UNPTOTUSD}" "${PAIDTOTUSD}"
echo ""

NOW=`date +%s`
TOTUSD=`echo ${UNPTOTUSD} + ${PAIDTOTUSD} | bc -l`

pushd /git/mining_stats > /dev/null 2>&1

echo ${NOW} ${TOTUSD} >> TOTUSD
#ETHUNPAID=`echo "${ETHUNPAID} + ${ETHNANOUNPAID} | bc -l`
#ETHPAID=`echo "${ETHPAID} + ${ETHNANOPAID} | bc -l`
#ETHUNUSD=`echo "${ETHUNUSD} + ${ETHNANOUNUSD} | bc -l`
#ETHPAIDUSD=`echo "${ETHPAIDUSD} + ${ETHNANOPAIDUSD} | bc -l`
printf "%s\t%s\t%s\t%s\t%s\t%s" ${NOW} $DIGUNPAID $DIGPAID $DIGUNUSD $DIGPAIDUSD $DIGUSD >> DIGIBYTE
echo "" >> DIGIBYTE
printf "%s\t%s\t%s\t%s\t%s\t%s" ${NOW} $ETHUNPAID $ETHPAID $ETHUNUSD $ETHPAIDUSD $ETHUSD >> ETHEREUM
echo "" >> ETHEREUM
printf "%s\t%s\t%s\t%s\t%s\t%s" ${NOW} $MUSUNPAID $MUSPAID $MUSUNUSD $MUSPAIDUSD $MUSUSD >> MUSICOIN
echo "" >> MUSICOIN
printf "%s\t%s\t%s\t%s\t%s\t%s" ${NOW} $UBIQUNPAID $UBIQPAID $UBIQUNUSD $UBIQPAIDUSD $UBIUSD >> UBIQ
echo "" >> UBIQ
git add TOTUSD DIGIBYTE ETHEREUM MUSICOIN UBIQ > /dev/null 2>&1
git commit -m "curren\$y" > /dev/null 2>&1
git push origin master > /dev/null 2>&1
popd > /dev/null 2>&1
